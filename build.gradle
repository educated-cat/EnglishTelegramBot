import org.apache.commons.lang3.JavaVersion

plugins {
	id("io.spring.dependency-management").version("1.1.0")
	id("org.springframework.boot").version("${springBootVersion}")
	id("com.bmuschko.docker-spring-boot-application").version("9.2.1").apply(false)
}

subprojects {
	group = "com.educatedcat.englishtelegrambot"
	version = "0.0.1-SNAPSHOT"
	
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'
	if (!it.name.contains('kafka-lib')) {
		apply plugin: 'com.bmuschko.docker-spring-boot-application'
	}
	
	repositories {
		mavenCentral()
	}
	
	configurations.all {
		exclude group: "org.apache.logging.log4j"
		exclude group: "org.skyscreamer"
	}
	
	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.4"
			mavenBom("io.zonky.test.postgres:embedded-postgres-binaries-bom:15.2.0")
		}
	}
	
	dependencies {
		constraints {
			/* Implementation */
			implementation("org.telegram:telegrambots-meta:6.1.0")
			
			/* Test */
			testImplementation("io.zonky.test:embedded-postgres:2.0.3")
			testImplementation("io.zonky.test:embedded-database-spring-test:2.2.0")
		}
		
		/* Spring Boot*/
		implementation("org.springframework.boot:spring-boot-devtools")
		annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
		
		/* Server */
		implementation("io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64")
		
		/* Utilities */
		compileOnly("org.projectlombok:lombok")
		annotationProcessor("org.projectlombok:lombok")
		
		/* Test */
		testCompileOnly("org.projectlombok:lombok")
		testAnnotationProcessor("org.projectlombok:lombok")
	}
	
	compileJava {
		sourceCompatibility = JavaVersion.JAVA_17
		targetCompatibility = JavaVersion.JAVA_17
	}
	
	test {
		testLogging {
			events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
		}
	}
	
	tasks.test {
		useJUnitPlatform()
	}
	
	if (!it.name.contains('kafka-lib')) {
		docker {
			springBootApplication {
				baseImage = 'openjdk:17-jdk-slim-buster'
				images = ["com.educatedcat.englishtelegrambot.${project.name}:latest"]
			}
		}
	}
}
