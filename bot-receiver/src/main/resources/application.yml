spring:
  application:
    name: bot-receiver
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  liquibase:
    contexts: non-test
    change-log: db/changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: validate
  kafka:
    bootstrap-servers:
      - ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      acks: all
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  zipkin:
    sender:
      type: WEB
  sleuth:
    sampler:
      probability: 1.0

eureka:
  client:
    prefer-same-zone-eureka: true
    service-url:
      defaultZone: ${DISCOVERY_SERVER_URL:http://localhost:8761/eureka}
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${random.value}
    metadata-map:
      zone: ${DISCOVERY_ZONE:prod}
    lease-renewal-interval-in-seconds: 3
    hostname: ${DISCOVERY_HOSTNAME:localhost}

telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN}
    url:
      api: ${TELEGRAM_BOT_API_URL}
  receiver:
    delay: 1000

dictionary:
  url:
    api: ${DICTIONARY_API_URL:http://localhost:8765/dictionary/api}

kafka:
  user:
    topic:
      name: user-topic
  productivity:
    topic:
      name: user-productivity-topic
  message-sender:
    topic:
      name: bot-message-topic

statistics:
  url:
    api: http://localhost:8765/user-statistics/api
